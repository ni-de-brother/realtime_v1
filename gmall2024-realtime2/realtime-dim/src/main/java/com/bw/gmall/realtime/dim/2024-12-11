//基本环境准备
        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();
        //设置并行度
        env.setParallelism(1);
        env.enableCheckpointing(3000);
        //使用FlinkCDC读取mysql表中的数据
        MySqlSource<String> mySqlSource = MySqlSource.<String>builder()
                .hostname("hadoop102")
                .port(3306)
                .databaseList("gmall") // set captured database
                .tableList("gmall.order_info") // set captured table
                .username("root")
                .password("000000")
//                .startupOptions(StartupOptions.initial())
//                .startupOptions(StartupOptions.earliest())
                .deserializer(new JsonDebeziumDeserializationSchema()) // converts SourceRecord to JSON String
                .build();



        env.fromSource(mySqlSource, WatermarkStrategy.noWatermarks(), "MySQL Source")
                // set 4 parallel source tasks
                .setParallelism(4)
                .print();// use parallelism 1 for sink to keep message ordering

        env.execute("Print MySQL Snapshot + Binlog");
with t1 as (
    select user_id,
           order_no,
           concat(region,'-',rand()) as  region,
           product_no,
           color_no,
           sale_amount,
           ts
    from data_incline_t
)
select substr(region,1,2) as region,
       count(*) as cnt
from (
    select region,
           count(*) as cnt
    from t1
    group by region
     ) as t2
group by substr(region,1,2);



